Date,Image Id,Components,Model,Pdf Type,Samples,Dimension,R2 Score,Max Error Score,N Layer,N Neurons,Epoch,Mse Score,Evs Score,Ise Score,K1 Score,Id,Best Params,Experiment Params,Pdf Param,Id Dataset
2023-10-27 00:44:54,b088f88,,PARZEN WINDOW,MULTIVARIATE_1254,200,1,0.782,0.144,,,,0.026,0.789,56.584,0.163,8f2f8,None,0.33,"[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",37138
2023-10-27 00:44:59,b088f88,16,MLP kmeans,MULTIVARIATE_1254,200,1,0.159,0.134,4,10000,500,0.052,0.345,0.027,0.112,b362b,"{'criterion': <class 'torch.nn.modules.loss.HuberLoss'>, 'max_epochs': 500, 'batch_size': 25, 'lr': 0.001, 'module__last_activation': 'lambda', 'module__hidden_layer': [(10, LeakyReLU(negative_slope=0.01)), (10, Tanh()), (10, LeakyReLU(negative_slope=0.1)), (10, ReLU())], 'optimizer': <class 'torch.optim.adam.Adam'>, 'module__dropout': 0.2}","{'criterion': [<class 'torch.nn.modules.loss.HuberLoss'>], 'max_epochs': [500], 'batch_size': [25, 16, 32], 'lr': [0.001, 0.003], 'module__last_activation': ['lambda', None], 'module__hidden_layer': [[(10, LeakyReLU(negative_slope=0.01)), (10, Tanh()), (10, LeakyReLU(negative_slope=0.1)), (10, ReLU())], [(32, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (64, ReLU())]], 'optimizer': [<class 'torch.optim.adam.Adam'>], 'module__dropout': [0.2]}","[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",37138
2023-10-27 00:47:05,6dc8c73,16,MLP kmeans,MULTIVARIATE_1254,400,1,0.643,0.146,4,10000,500,0.034,0.643,0.011,0.054,54158,"{'criterion': <class 'torch.nn.modules.loss.HuberLoss'>, 'max_epochs': 500, 'batch_size': 25, 'lr': 0.001, 'module__last_activation': 'lambda', 'module__hidden_layer': [(10, LeakyReLU(negative_slope=0.01)), (10, Tanh()), (10, LeakyReLU(negative_slope=0.1)), (10, ReLU())], 'optimizer': <class 'torch.optim.adam.Adam'>, 'module__dropout': 0.2}","{'criterion': [<class 'torch.nn.modules.loss.HuberLoss'>], 'max_epochs': [500], 'batch_size': [25, 16, 32], 'lr': [0.001, 0.003], 'module__last_activation': ['lambda', None], 'module__hidden_layer': [[(10, LeakyReLU(negative_slope=0.01)), (10, Tanh()), (10, LeakyReLU(negative_slope=0.1)), (10, ReLU())], [(32, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (64, ReLU())]], 'optimizer': [<class 'torch.optim.adam.Adam'>], 'module__dropout': [0.2]}","[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",1609d
2023-10-27 00:48:22,155ac6e,16,MLP kmeans,MULTIVARIATE_1254,400,1,0.868,0.089,4,262144,200,0.021,0.869,0.004,0.022,04cc6,"{'criterion': <class 'torch.nn.modules.loss.HuberLoss'>, 'max_epochs': 200, 'batch_size': 25, 'lr': 0.001, 'module__last_activation': 'lambda', 'module__hidden_layer': [(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], 'optimizer': <class 'torch.optim.adam.Adam'>, 'module__dropout': 0.2}","{'criterion': [<class 'torch.nn.modules.loss.HuberLoss'>], 'max_epochs': [200], 'batch_size': [25, 16, 32], 'lr': [0.001, 0.003], 'module__last_activation': ['lambda', None], 'module__hidden_layer': [[(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], [(32, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (64, ReLU())]], 'optimizer': [<class 'torch.optim.adam.Adam'>], 'module__dropout': [0.2]}","[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",1609d
2023-10-27 00:48:44,f54de69,16,MLP kmeans,MULTIVARIATE_1254,300,1,0.808,0.095,4,262144,200,0.025,0.814,0.006,0.034,e23e9,"{'criterion': <class 'torch.nn.modules.loss.HuberLoss'>, 'max_epochs': 200, 'batch_size': 25, 'lr': 0.001, 'module__last_activation': 'lambda', 'module__hidden_layer': [(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], 'optimizer': <class 'torch.optim.adam.Adam'>, 'module__dropout': 0.2}","{'criterion': [<class 'torch.nn.modules.loss.HuberLoss'>], 'max_epochs': [200], 'batch_size': [25, 16, 32], 'lr': [0.001, 0.003], 'module__last_activation': ['lambda', None], 'module__hidden_layer': [[(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], [(32, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (64, ReLU())]], 'optimizer': [<class 'torch.optim.adam.Adam'>], 'module__dropout': [0.2]}","[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",98600
2023-10-27 00:49:08,7f801cb,16,MLP kmeans,MULTIVARIATE_1254,300,1,0.851,0.085,4,262144,400,0.022,0.857,0.005,0.027,dfbab,"{'criterion': <class 'torch.nn.modules.loss.HuberLoss'>, 'max_epochs': 400, 'batch_size': 25, 'lr': 0.001, 'module__last_activation': 'lambda', 'module__hidden_layer': [(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], 'optimizer': <class 'torch.optim.adam.Adam'>, 'module__dropout': 0.2}","{'criterion': [<class 'torch.nn.modules.loss.HuberLoss'>], 'max_epochs': [400], 'batch_size': [25, 16, 32], 'lr': [0.001, 0.003], 'module__last_activation': ['lambda', None], 'module__hidden_layer': [[(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], [(32, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (64, ReLU())]], 'optimizer': [<class 'torch.optim.adam.Adam'>], 'module__dropout': [0.2]}","[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",98600
2023-10-27 00:49:31,68e3f0c,16,MLP kmeans,MULTIVARIATE_1254,300,1,0.853,0.085,4,262144,600,0.022,0.857,0.005,0.027,efffa,"{'criterion': <class 'torch.nn.modules.loss.HuberLoss'>, 'max_epochs': 600, 'batch_size': 25, 'lr': 0.001, 'module__last_activation': 'lambda', 'module__hidden_layer': [(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], 'optimizer': <class 'torch.optim.adam.Adam'>, 'module__dropout': 0.2}","{'criterion': [<class 'torch.nn.modules.loss.HuberLoss'>], 'max_epochs': [600], 'batch_size': [25, 16, 32], 'lr': [0.001, 0.003], 'module__last_activation': ['lambda', None], 'module__hidden_layer': [[(16, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (32, LeakyReLU(negative_slope=0.1)), (16, ReLU())], [(32, LeakyReLU(negative_slope=0.01)), (32, Tanh()), (64, ReLU())]], 'optimizer': [<class 'torch.optim.adam.Adam'>], 'module__dropout': [0.2]}","[[{'type': 'exponential', 'rate': 1, 'weight': 0.2}, {'type': 'logistic', 'mean': 4, 'scale': 0.8, 'weight': 0.25}, {'type': 'logistic', 'mean': 5.5, 'scale': 0.7, 'weight': 0.3}, {'type': 'exponential', 'mean': -1, 'weight': 0.25, 'shift': -10}]]",98600
